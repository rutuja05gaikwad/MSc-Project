import boto3
from botocore.exceptions import ClientError

def create_s3_bucket(bucket_name, region='us-west-1'):
    s3_client = boto3.client('s3', region_name=region)
    
    try:
        # Check if the bucket already exists
        s3_client.head_bucket(Bucket=bucket_name)
        print(f"Bucket '{bucket_name}' already exists and is owned by you.")
        return
    
    except ClientError as e:
        error_code = e.response['Error']['Code']
        if error_code == '404':
            # If the bucket does not exist, create it
            if region == 'us-east-1':
                response = s3_client.create_bucket(Bucket=bucket_name)
            else:
                response = s3_client.create_bucket(
                    Bucket=bucket_name,
                    CreateBucketConfiguration={
                        'LocationConstraint': region
                    }
                )
            print(f"Created bucket '{bucket_name}' in region '{region}'.")
        else:
            # Re-raise if the error is not related to the bucket not existing
            raise e

def configure_s3_event_notification(bucket_name, lambda_arn):
    s3_client = boto3.client('s3')
    
    notification_configuration = {
        'LambdaFunctionConfigurations': [
            {
                'Events': ['s3:ObjectCreated:*'],
                'LambdaFunctionArn': lambda_arn
            }
        ]
    }

    s3_client.put_bucket_notification_configuration(
        Bucket=bucket_name,
        NotificationConfiguration=notification_configuration
    )
    print(f"Configured bucket notification for '{bucket_name}' to trigger Lambda function '{lambda_arn}'.")
